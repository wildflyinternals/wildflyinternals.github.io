<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wildflyinternals.io</title>
    <description>Wildfly Internals</description>
    <link></link>
    
      
        <item>
          <title>Troubleshooting the Wildfly startup process</title>
          <description>&lt;p&gt;In this article, Iâ€™d like to introduce to you how to using the standard &lt;code class=&quot;highlighter-rouge&quot;&gt;Java Debug Wire Protocol&lt;/code&gt;(See &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/guide/jpda/jdwp-spec.html&quot;&gt;JavaTM Debug Wire Protocol&lt;/a&gt;) to connect to troubleshoot the Wildfly server in standalone mode. The first step is to look into the &lt;code class=&quot;highlighter-rouge&quot;&gt;standalone.sh&lt;/code&gt; script provided by the server.&lt;/p&gt;

&lt;h2 id=&quot;analyzing-the-standalone-startup-script&quot;&gt;Analyzing the standalone startup script&lt;/h2&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;standalone.sh&lt;/code&gt;, it provides a debug option &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; for the users to debug their applications deployed in server. Here is the relative code:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Use --debug to activate debug mode with an optional argument to specify the p\&lt;/span&gt;
ort.
&lt;span class=&quot;c&quot;&gt;# Usage : standalone.sh --debug&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#         standalone.sh --debug 9797&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# By default debug mode is disabled.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DEBUG_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DEBUG&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DEBUG_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DEBUG_PORT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;8787&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;debug&lt;/code&gt; option will enable the &lt;code class=&quot;highlighter-rouge&quot;&gt;DEBUG_MODE&lt;/code&gt; in the script. Here is the relative code in the script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Set debug settings if not already set&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DEBUG_MODE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DEBUG_OPT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$JAVA_OPTS&lt;/span&gt; | &lt;span class=&quot;nv&quot;&gt;$GREP&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\-&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;agentlib:jdwp&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DEBUG_OPT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -agentlib:jdwp=transport=dt_socket,address=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DEBUG&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
_PORT,server=y,suspend=n&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Debug already enabled in JAVA_OPTS, ignoring --debug argument&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fi
fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As the script shown above, we can see the debug mode will add the &lt;code class=&quot;highlighter-rouge&quot;&gt;jdwp&lt;/code&gt; option into &lt;code class=&quot;highlighter-rouge&quot;&gt;JAVA_OPTS&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -agentlib:jdwp=transport=dt_socket,address=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DEBUG_PORT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,server=y,suspend=n&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above options will be finally passed to the startup command in the script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Execute the JVM in the background&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; -D&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Standalone]&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$JAVA_OPTS&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      &lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;-Dorg.jboss.boot.log.file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JBOSS_LOG_DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/server.log&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      &lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;-Dlogging.configuration&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;file:&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JBOSS_CONFIG_DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/logging.properties&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -jar &lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;/jboss-modules.jar&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$MODULE_OPTS&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -mp &lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JBOSS_MODULEPATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      org.jboss.as.standalone &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -Djboss.home.dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JBOSS_HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      -Djboss.server.base.dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JBOSS_BASE_DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SERVER_OPTS&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above command will start the Wildfly in standalone mode. We can see the &lt;code class=&quot;highlighter-rouge&quot;&gt;jboss-modules.jar&lt;/code&gt; is the entry point of the application server. We canâ€™t find the &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; option in &lt;code class=&quot;highlighter-rouge&quot;&gt;domain.sh&lt;/code&gt;, because if the application server is running in domain mode, there will be multiple processes run, and &lt;code class=&quot;highlighter-rouge&quot;&gt;domain.sh&lt;/code&gt; canâ€™t know which thread you want to debug. So in this article, I will focus on the standalone mode of Wildfly. The &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; option provided by &lt;code class=&quot;highlighter-rouge&quot;&gt;standalone.sh&lt;/code&gt; sets the &lt;code class=&quot;highlighter-rouge&quot;&gt;suspend=n&lt;/code&gt;. This setting will not block the server start process and will allow the server to start normally whiling waiting for debug request. Here is the server startup process with &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; option enabled:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./standalone.sh --debug
 &lt;span class=&quot;o&quot;&gt;=========================================================================&lt;/span&gt;
 
   JBoss Bootstrap Environment
 
   JBOSS_HOME: /Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final
 
   JAVA: /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/bin/java
 
   JAVA_OPTS:  -server -Xms64m -Xmx512m -XX:MetaspaceSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;96M -XX:MaxMetaspaceSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;256m -Djava.net.preferIPv4Stack&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -Djboss.modules.system.pkgs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;org.jboss.byteman -Djava.awt.headless&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -agentlib:jdwp&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;transport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dt_socket,address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8787,server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y,suspend&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;n
 
 &lt;span class=&quot;o&quot;&gt;=========================================================================&lt;/span&gt;
 
 &lt;span class=&quot;s2&quot;&gt;&quot;/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/bin/java&quot;&lt;/span&gt; -D&lt;span class=&quot;s2&quot;&gt;&quot;[Standalone]&quot;&lt;/span&gt; -server -Xms64m -Xmx512m -XX:MetaspaceSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;96M -XX:MaxMetaspaceSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;256m -Djava.net.preferIPv4Stack&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -Djboss.modules.system.pkgs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;org.jboss.byteman -Djava.awt.headless&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -agentlib:jdwp&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;transport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dt_socket,address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8787,server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y,suspend&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;n &lt;span class=&quot;s2&quot;&gt;&quot;-Dorg.jboss.boot.log.file=/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone/log/server.log&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-Dlogging.configuration=file:/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone/configuration/logging.properties&quot;&lt;/span&gt; -jar &lt;span class=&quot;s2&quot;&gt;&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/jboss-modules.jar&quot;&lt;/span&gt; -mp &lt;span class=&quot;s2&quot;&gt;&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/modules&quot;&lt;/span&gt; org.jboss.as.standalone -Djboss.home.dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final&quot;&lt;/span&gt; -Djboss.server.base.dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone&quot;&lt;/span&gt;
 Listening &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;transport dt_socket at address: 8787
 20:06:48,337 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.modules] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBoss Modules version 1.5.2.Final
 20:06:50,548 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.msc] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBoss MSC version 1.2.6.Final
 20:06:50,611 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0049: WildFly Full 10.1.0.Final &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;WildFly Core 2.2.0.Final&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; starting
 ...
 20:07:06,717 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WFLYSRV0025: WildFly Full 10.1.0.Final &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;WildFly Core 2.2.0.Final&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; started &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;19442ms - Started 476 of 732 services &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;416 services are lazy, passive or on-demand&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From the above server output, we can see the command to invoke the server in standalone mode is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/bin/java&quot; -D&quot;[Standalone]&quot; -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n &quot;-Dorg.jboss.boot.log.file=/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone/log/server.log&quot; &quot;-Dlogging.configuration=file:/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone/configuration/logging.properties&quot; -jar &quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/jboss-modules.jar&quot; -mp &quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/modules&quot; org.jboss.as.standalone -Djboss.home.dir=&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final&quot; -Djboss.server.base.dir=&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We can see the &lt;code class=&quot;highlighter-rouge&quot;&gt;jdwp&lt;/code&gt; port has been opened in above process. In addition, the debug port has been opened:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Listening for transport dt_socket at address: 8787
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, the startup process is not blocked and the server has been started normally. This is okay because most users wants to troubleshoot their own projects deployed in the Wildfly, so the server startup process donâ€™t need to be blocked. However, if we want to troubleshoot the Wildfly server startup process itself, then we need to put the server into blocking mode so we can start a debugger to connect to the &lt;code class=&quot;highlighter-rouge&quot;&gt;jdwp&lt;/code&gt; debug port of the server during startup process. To achieve the goal, we need to change the &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; option in &lt;code class=&quot;highlighter-rouge&quot;&gt;standalone.sh&lt;/code&gt; slightly. We need to edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;JAVA_OPTS&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;DEBUG_MODE&lt;/code&gt; and change the &lt;code class=&quot;highlighter-rouge&quot;&gt;suspend&lt;/code&gt; setting from &lt;code class=&quot;highlighter-rouge&quot;&gt;suspend=n&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;suspend=y&lt;/code&gt;. In this way, we can block the server startup process. After making the change, we can start the server in standalone mode with &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; option enabled, and here is the output:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./standalone.sh --debug
&lt;span class=&quot;o&quot;&gt;=========================================================================&lt;/span&gt;

  JBoss Bootstrap Environment

  JBOSS_HOME: /Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final

  JAVA: /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/bin/java

  JAVA_OPTS:  -server -Xms64m -Xmx512m -XX:MetaspaceSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;96M -XX:MaxMetaspaceSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;256m -Djava.net.preferIPv4Stack&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -Djboss.modules.system.pkgs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;org.jboss.byteman -Djava.awt.headless&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -agentlib:jdwp&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;transport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dt_socket,address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8787,server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y,suspend&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y

&lt;span class=&quot;o&quot;&gt;=========================================================================&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/bin/java&quot;&lt;/span&gt; -D&lt;span class=&quot;s2&quot;&gt;&quot;[Standalone]&quot;&lt;/span&gt; -server -Xms64m -Xmx512m -XX:MetaspaceSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;96M -XX:MaxMetaspaceSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;256m -Djava.net.preferIPv4Stack&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -Djboss.modules.system.pkgs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;org.jboss.byteman -Djava.awt.headless&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -agentlib:jdwp&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;transport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dt_socket,address&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8787,server&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y,suspend&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y &lt;span class=&quot;s2&quot;&gt;&quot;-Dorg.jboss.boot.log.file=/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone/log/server.log&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-Dlogging.configuration=file:/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone/configuration/logging.properties&quot;&lt;/span&gt; -jar &lt;span class=&quot;s2&quot;&gt;&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/jboss-modules.jar&quot;&lt;/span&gt; -mp &lt;span class=&quot;s2&quot;&gt;&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/modules&quot;&lt;/span&gt; org.jboss.as.standalone -Djboss.home.dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final&quot;&lt;/span&gt; -Djboss.server.base.dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Users/weli/projs/WFLY/wildfly10/wildfly-10.1.0.Final/standalone&quot;&lt;/span&gt;
Listening &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;transport dt_socket at address: 8787
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After changing the &lt;code class=&quot;highlighter-rouge&quot;&gt;suspend&lt;/code&gt; setting to &lt;code class=&quot;highlighter-rouge&quot;&gt;suspend=y&lt;/code&gt;, we can see the server is blocked during startup process, and now we can use a debugger to connect to the server and set breakpoints to the startup code of the Wildfly.&lt;/p&gt;

&lt;h2 id=&quot;troubleshooting-the-server&quot;&gt;Troubleshooting the server&lt;/h2&gt;

&lt;p&gt;To troubleshoot the server itself, we need to get the source code of the Wildfly. We need to make sure the source code we are using has the same version with the Wildfly server we are running. In the Wildfly project download page, we can always download the server and its source code in same version. Here is the the screenshot from the Wildfly download page(&lt;a href=&quot;http://wildfly.org/downloads/&quot;&gt;http://wildfly.org/downloads/&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-07/wildfly-download.png&quot; alt=&quot;/assets/2017-05-07/wildfly-download.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the above screenshot, we can see for each version of Wildfly, there is a &lt;code class=&quot;highlighter-rouge&quot;&gt;Full Distribution&lt;/code&gt; download link and a &lt;code class=&quot;highlighter-rouge&quot;&gt;Source Code&lt;/code&gt; download link. We can download both of them to make sure we have same version of source code and server binary. Another way is to compile the Wildfly server from source code cloned from Github(&lt;a href=&quot;http://wildflyinternals.io/2017/05/05/wildfly-src.html&quot;&gt;Fetching and compiling the Wildfly upstream source&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;After getting the correct version of the source code, we can open it in an IDE and set breakpoints to the source code for debugging. In this article, I will use IntelliJ IDEA and my IDE, and I will use &lt;code class=&quot;highlighter-rouge&quot;&gt;wildfly-10.1.0.Final&lt;/code&gt; and its source for demonstration:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls
wildfly-10.1.0.Final         wildfly-10.1.0.Final-src.zip
wildfly-10.1.0.Final-src     wildfly-10.1.0.Final.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I opened the above &lt;code class=&quot;highlighter-rouge&quot;&gt;wildfly-10.1.0.Final-src&lt;/code&gt; in IntelliJ, and set some breakpoints in &lt;code class=&quot;highlighter-rouge&quot;&gt;org.jboss.as.connector.subsystems.datasources.JdbcDriverAdd&lt;/code&gt; class. Here is the screenshot:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-07/jdbcadd.png&quot; alt=&quot;/assets/2017-05-07/jdbcadd.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The above screenshot shows one of the breakpoints I set in the &lt;code class=&quot;highlighter-rouge&quot;&gt;org.jboss.as.connector.subsystems.datasources.JdbcDriverAdd&lt;/code&gt; class of the Wildfly. This class will load the database driver configured in &lt;code class=&quot;highlighter-rouge&quot;&gt;standalone.xml&lt;/code&gt; during server startup process. The &lt;code class=&quot;highlighter-rouge&quot;&gt;standalone.xml&lt;/code&gt; is the configuration file of the standalone mode of the server. This file is in the following location of the server:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wildfly-10.1.0.Final/standalone/configuration/standalone.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above configuration file contains the &lt;code class=&quot;highlighter-rouge&quot;&gt;datasources&lt;/code&gt; section for the users to configure their database connections. Here is the configuration provided by default:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;datasource&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;jndi-name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java:jboss/datasources/ExampleDS&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;pool-n\&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;ame=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ExampleDS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;use-java-context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;connection-url&amp;gt;&lt;/span&gt;jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE\
_ON_EXIT=FALSE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/connection-url&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;driver&amp;gt;&lt;/span&gt;h2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/driver&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;security&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;user-name&amp;gt;&lt;/span&gt;sa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/user-name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;password&amp;gt;&lt;/span&gt;sa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/security&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/datasource&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above configuration defines a &lt;code class=&quot;highlighter-rouge&quot;&gt;ExampleDS&lt;/code&gt; datasource, and it is backed by a &lt;code class=&quot;highlighter-rouge&quot;&gt;driver&lt;/code&gt; configuration listed in below:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;driver&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;module=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.h2database.h2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;xa-datasource-class&amp;gt;&lt;/span&gt;org.h2.jdbcx.JdbcDataSource&lt;span class=&quot;nt&quot;&gt;&amp;lt;/xa-datasource-class&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/driver&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above configuration defines the database driver to be used by the datasource. We donâ€™t have to understand the details now, and we just need to know Wildfly will load the database driver during its startup process, and the processing class is &lt;code class=&quot;highlighter-rouge&quot;&gt;org.jboss.as.connector.subsystems.datasources&lt;/code&gt;. Now we can start the server with &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; option, and change the debug option in &lt;code class=&quot;highlighter-rouge&quot;&gt;standalone.sh&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;suspend=n&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;suspend=y&lt;/code&gt; as we learned. Here is the server running with &lt;code class=&quot;highlighter-rouge&quot;&gt;--debug&lt;/code&gt; option enabled and put in suspend mode during startup process:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-07/suspend.png&quot; alt=&quot;/assets/2017-05-07/suspend.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the above screenshot, we can see the server is suspended and
 waiting for the a debugger to connect to port &lt;code class=&quot;highlighter-rouge&quot;&gt;8787&lt;/code&gt;. Now we can come to the IDE side and configure the remote debugger. In IntelliJ, I can open the &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit Configuration&lt;/code&gt; tab:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-07/edit.png&quot; alt=&quot;/assets/2017-05-07/edit.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After clicking the &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit Configuration&lt;/code&gt; tab as shown in above screenshot, we will enter the &lt;code class=&quot;highlighter-rouge&quot;&gt;Run/Debug Configuration&lt;/code&gt; window. In this window, we need to add a &lt;code class=&quot;highlighter-rouge&quot;&gt;Remote Debug&lt;/code&gt; configuration to connect to the suspended Wildfly server. Here is the screenshot that shows how to configure it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-07/remote.png&quot; alt=&quot;/assets/2017-05-07/remote.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After clicking the &lt;code class=&quot;highlighter-rouge&quot;&gt;Remote&lt;/code&gt; item as shown in above, we can start the remote debug configuration. Here is the screenshot to do so:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-07/port.png&quot; alt=&quot;/assets/2017-05-07/port.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In above configuration, we only need to change the port to &lt;code class=&quot;highlighter-rouge&quot;&gt;8787&lt;/code&gt;, because the server side is listening to this port for remote debugger to connect. After the configuration is done, we can click the &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt; button, and start to use it. Here is the screenshot:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-07/bug.png&quot; alt=&quot;/assets/2017-05-07/bug.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As the screenshot shown above, we can click the bug icon to start the remote debugger, and this will trigger the server side to go on executing until reaching the breakpoint. Here is the screenshot to show the server startup process reached at the breakpoint:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2017-05-07/jdbcstop.png&quot; alt=&quot;/assets/2017-05-07/jdbcstop.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The above process shows us how to troubleshoot the Wildfly startup process. We will this method to analyze the Wildfly source code and see how it works in runtime. This article is a basis for the future topics Iâ€™d like to write.&lt;/p&gt;
</description>
          <pubDate>2017-05-07T00:00:00+00:00</pubDate>
          <link>/2017/05/07/troubleshooting-wildfly.html</link>
          <guid isPermaLink="true">/2017/05/07/troubleshooting-wildfly.html</guid>
        </item>
      
    
      
        <item>
          <title>Fetching and compiling the Wildfly upstream source</title>
          <description>&lt;p&gt;In this article I want to teach you how to fetch the Wildfly code from Github and compile it for playing. First we need to clone the Wildfly source repository from Github, and here is the address of the repository:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/wildfly/wildfly.git&quot;&gt;https://github.com/wildfly/wildfly.git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The command to clone the repository is here:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/wildfly/wildfly.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above command will clone the &lt;code class=&quot;highlighter-rouge&quot;&gt;wildfly&lt;/code&gt; project into our local machine.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ls
appclient        clustering    integration-tests.bat  legacy              picketlink  servlet-build         tools         zanata.xml
batch            connector     integration-tests.sh   mail                pojo        servlet-dist          transactions
bean-validation  dist          jaxrs                  messaging-activemq  pom.xml     servlet-feature-pack  undertow
build            ee            jdr                    mod_cluster         README.md   spec-api              web-common
build.bat        ejb3          jpa                    mvnw                rts         system-jmx            webservices
build.sh         feature-pack  jsf                    mvnw.cmd            sar         target                weld
client           iiop-openjdk  jsr77                  naming              security    testsuite             xts
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above output shows the directory structure of the &lt;code class=&quot;highlighter-rouge&quot;&gt;wildfly&lt;/code&gt; project. We can see the project is organized in subsystems. For example, the &lt;code class=&quot;highlighter-rouge&quot;&gt;undertow&lt;/code&gt; subsystem is the WebServer module of the Wildfly, and &lt;code class=&quot;highlighter-rouge&quot;&gt;jaxrs&lt;/code&gt; is the RESTFul WebService module. We will check these subsystems in future. The whole project is Maven based, and there is a build script named &lt;code class=&quot;highlighter-rouge&quot;&gt;build.sh&lt;/code&gt; in the root directory. We can run the build script locally to build the whole project. Here is the command and part of the output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./build.sh
/home/weli/projs/wildfly/mvnw -Dmaven.user.home=/home/weli/projs/wildfly/tools  install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From the above command and its output we can see the &lt;code class=&quot;highlighter-rouge&quot;&gt;build.sh&lt;/code&gt; will start to build the project using the &lt;code class=&quot;highlighter-rouge&quot;&gt;mvnw&lt;/code&gt; command. The &lt;code class=&quot;highlighter-rouge&quot;&gt;mvnw&lt;/code&gt; command will install Maven into local folder firstly, and then use it to build the project. The time to build the whole project depends on the speed of your network and the configuration of your hardware. During the build process, it will download many components from online Maven repositories, and it will run many tests in project. During the first time of build, it will use most time to download the dependencies, and the future builds will use less time. Here is the output of my build in my local machine:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] WildFly: Parent Aggregator ......................... SUCCESS [  1.314 s]
[INFO] WildFly: Clustering Subsystems ..................... SUCCESS [  0.102 s]
[INFO] WildFly: JGroups modules ........................... SUCCESS [  0.036 s]
[INFO] WildFly: JGroups API ............................... SUCCESS [  1.827 s]
[INFO] WildFly: Clustering services ....................... SUCCESS [  1.092 s]
[INFO] WildFly: Naming Subsystem .......................... SUCCESS [  3.691 s]
[INFO] WildFly: Common code for clustering subsystems ..... SUCCESS [  0.934 s]
[INFO] WildFly: JGroups SPI ............................... SUCCESS [  0.457 s]
[INFO] WildFly: EE ........................................ SUCCESS [  6.884 s]
[INFO] WildFly: IIOP Openjdk Subsystem .................... SUCCESS [  3.283 s]
[INFO] WildFly: Transaction Subsystem ..................... SUCCESS [  6.460 s]
[INFO] WildFly: Clustering marshalling modules ............ SUCCESS [  0.028 s]
[INFO] WildFly: Clustering marshalling API ................ SUCCESS [  0.234 s]
[INFO] WildFly: Infinispan modules ........................ SUCCESS [  0.025 s]
[INFO] WildFly: Infinispan SPI ............................ SUCCESS [  1.150 s]
[INFO] WildFly: Security Subsystem parent ................. SUCCESS [  0.029 s]
[INFO] WildFly: Security Subsystem ........................ SUCCESS [  6.331 s]
[INFO] WildFly: Connector Subsystem ....................... SUCCESS [ 17.181 s]
[INFO] WildFly: Clustering public API ..................... SUCCESS [  0.314 s]
[INFO] WildFly: EE clustering ............................. SUCCESS [  0.026 s]
[INFO] WildFly: EE clustering SPI ......................... SUCCESS [  0.635 s]
[INFO] WildFly: SFSB clustering ........................... SUCCESS [  0.024 s]
[INFO] WildFly: SFSB clustering - SPI ..................... SUCCESS [  0.539 s]
[INFO] WildFly: Clustering marshalling SPI ................ SUCCESS [  1.475 s]
[INFO] WildFly: Clustering integration with JBoss Marshalling SUCCESS [  0.830 s]
[INFO] WildFly: Singleton modules ......................... SUCCESS [  0.025 s]
[INFO] WildFly: Singleton API ............................. SUCCESS [  0.756 s]
[INFO] WildFly: Clustering SPI ............................ SUCCESS [  0.348 s]
[INFO] WildFly: EJB Subsystem ............................. SUCCESS [ 13.298 s]
[INFO] WildFly: Web Common Classes ........................ SUCCESS [  0.717 s]
[INFO] WildFly: Undertow .................................. SUCCESS [  7.959 s]
[INFO] WildFly: Web Services Subsystem .................... SUCCESS [  0.015 s]
[INFO] WildFly: Web Services Server Integration Subsystem . SUCCESS [  6.692 s]
[INFO] WildFly: Application Client Bootstrap .............. SUCCESS [  0.432 s]
[INFO] WildFly: Batch Integration ......................... SUCCESS [  0.072 s]
[INFO] WildFly: Batch Integration Subsystem (JBeret implementation) SUCCESS [  4.082 s]
[INFO] WildFly: Batch Integration Subsystem ............... SUCCESS [  2.366 s]
[INFO] WildFly: Bean Validation ........................... SUCCESS [  2.139 s]
[INFO] WildFly: Servlet Feature Pack ...................... SUCCESS [  3.400 s]
[INFO] WildFly: JPA ....................................... SUCCESS [  0.018 s]
[INFO] jipijapa SPI ....................................... SUCCESS [  0.157 s]
[INFO] WildFly: Weld ...................................... SUCCESS [  0.016 s]
[INFO] WildFly: Weld Subsystem SPI ........................ SUCCESS [  0.227 s]
[INFO] WildFly: Weld Common Tools ......................... SUCCESS [  0.316 s]
[INFO] WildFly: JPA Subsystem ............................. SUCCESS [  2.246 s]
[INFO] WildFly: Weld Subsystem ............................ SUCCESS [  5.174 s]
[INFO] WildFly: PicketLink Subsystem ...................... SUCCESS [  6.638 s]
[INFO] WildFly: Security Subsystem API .................... SUCCESS [  0.226 s]
[INFO] WildFly: System JMX Module ......................... SUCCESS [  0.139 s]
[INFO] WildFly: JAX-RS Integration ........................ SUCCESS [  2.241 s]
[INFO] WildFly: RTS Subsystem ............................. SUCCESS [  2.326 s]
[INFO] jipijapa Hibernate 5.x (JPA 2.1) integration ....... SUCCESS [  0.323 s]
[INFO] jipijapa Hibernate 4.3.x (JPA 2.1) integration ..... SUCCESS [  1.719 s]
[INFO] jipijapa Hibernate 4.1.x + 4.2.x (JPA 2.0) integration SUCCESS [  0.265 s]
[INFO] jipijapa EclipseLink integration ................... SUCCESS [  0.161 s]
[INFO] jipijapa OpenJPA integration ....................... SUCCESS [  0.300 s]
[INFO] WildFly: EJB Client BOM ............................ SUCCESS [  0.071 s]
[INFO] WildFly: JMS Client BOM ............................ SUCCESS [  0.196 s]
[INFO] WildFly: EJB and JMS client combined jar ........... SUCCESS [  4.137 s]
[INFO] WildFly: EE clustering - Infinispan service provider SUCCESS [  0.927 s]
[INFO] WildFly: SFSB clustering - Infinispan integration .. SUCCESS [  4.098 s]
[INFO] WildFly: JGroups Subsystem ......................... SUCCESS [ 12.050 s]
[INFO] WildFly: Clustering marshalling Infinispan adapters  SUCCESS [  0.184 s]
[INFO] WildFly: Infinispan subsystem ...................... SUCCESS [ 50.308 s]
[INFO] WildFly: Clustering API implementation ............. SUCCESS [  0.910 s]
[INFO] WildFly: Singleton extension ....................... SUCCESS [  3.309 s]
[INFO] WildFly: Web session clustering .................... SUCCESS [  0.021 s]
[INFO] WildFly: Web session clustering API ................ SUCCESS [  0.139 s]
[INFO] WildFly: Web session clustering SPI ................ SUCCESS [  1.097 s]
[INFO] WildFly: Web session clustering - Infinispan service provider SUCCESS [  2.273 s]
[INFO] WildFly: Web session clustering - Undertow integration SUCCESS [  1.141 s]
[INFO] WildFly: EJB Container Managed Persistence Subsystem SUCCESS [  1.841 s]
[INFO] Wildfly: Config Admin .............................. SUCCESS [  1.631 s]
[INFO] WildFly: JAXR Client ............................... SUCCESS [  1.676 s]
[INFO] WildFly: JBoss Diagnostic Reporter ................. SUCCESS [  0.017 s]
[INFO] WildFly: JDR ....................................... SUCCESS [  1.843 s]
[INFO] WildFly: JSF ....................................... SUCCESS [  0.017 s]
[INFO] WildFly: JSF Subsystem ............................. SUCCESS [  1.710 s]
[INFO] WildFly: JSF Injection Handlers .................... SUCCESS [  0.309 s]
[INFO] WildFly: JSR-77 Subsystem .......................... SUCCESS [  2.216 s]
[INFO] WildFly: JacORB Subsystem .......................... SUCCESS [  7.434 s]
[INFO] WildFly: Mail subsystem ............................ SUCCESS [  5.446 s]
[INFO] WildFly: Messaging Subsystem With ActiveMQ Artemis . SUCCESS [  9.612 s]
[INFO] WildFly: (Legacy) Messaging Subsystem .............. SUCCESS [ 16.285 s]
[INFO] WildFly: mod_cluster Subsystem ..................... SUCCESS [  0.016 s]
[INFO] WildFly: mod_cluster Extension ..................... SUCCESS [  7.047 s]
[INFO] WildFly: mod_cluster Undertow Integration .......... SUCCESS [  1.190 s]
[INFO] WildFly: POJO Subsystem ............................ SUCCESS [  1.450 s]
[INFO] WildFly: Service Archive Subsystem ................. SUCCESS [  1.601 s]
[INFO] WildFly: Web Subsystem ............................. SUCCESS [  5.175 s]
[INFO] WildFly: Weld EJB .................................. SUCCESS [  0.249 s]
[INFO] WildFly: Weld JPA .................................. SUCCESS [  0.234 s]
[INFO] WildFly: Weld Bean Validation ...................... SUCCESS [  0.179 s]
[INFO] WildFly: Weld Webservices .......................... SUCCESS [  1.597 s]
[INFO] WildFly: Weld Transactions ......................... SUCCESS [  0.191 s]
[INFO] WildFly: XTS Subsystem ............................. SUCCESS [  3.584 s]
[INFO] WildFly: Full Feature Pack ......................... SUCCESS [ 17.819 s]
[INFO] WildFly: Build ..................................... SUCCESS [ 19.608 s]
[INFO] WildFly: Distribution .............................. SUCCESS [ 20.630 s]
[INFO] WildFly: JSF Multi-JSF installer ................... SUCCESS [  1.542 s]
[INFO] WildFly: Exported Java EE Specification APIs ....... SUCCESS [  0.037 s]
[INFO] WildFly: Validation Tests for Exported Java EE Specification APIs SUCCESS [  0.039 s]
[INFO] WildFly: Servlet Build ............................. SUCCESS [  0.462 s]
[INFO] WildFly: Servlet Distribution ...................... SUCCESS [  1.401 s]
[INFO] WildFly: Web Services Tests Integration Subsystem .. SUCCESS [  1.573 s]
[INFO] WildFly Test Suite: Shared ......................... SUCCESS [  0.578 s]
[INFO] WildFly Test Suite: Aggregator ..................... SUCCESS [  0.016 s]
[INFO] WildFly Test Suite: Integration (parent) ........... SUCCESS [  0.311 s]
[INFO] WildFly Test Suite: Integration - Web .............. SUCCESS [ 44.440 s]
[INFO] WildFly Test Suite: Integration - Smoke ............ SUCCESS [ 53.678 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 07:23 min
[INFO] Finished at: 2017-05-05T02:47:04+00:00
[INFO] Final Memory: 322M/795M
[INFO] ------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Above is a summary of the built components in &lt;code class=&quot;highlighter-rouge&quot;&gt;wildfly&lt;/code&gt;. After all the components are built, it will be assembled into a runnable application server. You can find it in the &lt;code class=&quot;highlighter-rouge&quot;&gt;build/target&lt;/code&gt; directory of the project. Here are the contents of the directory:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ls build/target
archive-tmp  wildfly-11.0.0.Beta1-SNAPSHOT  wildfly-11.0.0.Beta1-SNAPSHOT.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From above, we can see the application server is in &lt;code class=&quot;highlighter-rouge&quot;&gt;wildfly-11.0.0.Beta1-SNAPSHOT&lt;/code&gt;, and there is also a zipped pacakge for distribution. We can enter the &lt;code class=&quot;highlighter-rouge&quot;&gt;wildfly-11.0.0.Beta1-SNAPSHOT&lt;/code&gt; directory and check its contents:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[weli@io wildfly]$ cd build/target/wildfly-11.0.0.Beta1-SNAPSHOT/
[weli@io wildfly-11.0.0.Beta1-SNAPSHOT]$ ls
appclient  bin  copyright.txt  docs  domain  jboss-modules.jar  LICENSE.txt  modules  README.txt  standalone  welcome-content
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From the above output, we can see the application server is in the directory. Now we can start the server with the following command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bin/standalone.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above command will run the Wildfly in standalone mode, and here is the output of the server:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;===

  JBoss Bootstrap Environment

  JBOSS_HOME: /home/weli/projs/wildfly/build/target/wildfly-11.0.0.Beta1-SNAPSHOT

  JAVA: java

  JAVA_OPTS:  -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true

=========================================================================

03:20:01,271 INFO  [org.jboss.modules] (main) JBoss Modules version 1.6.0.Beta6
03:20:01,581 INFO  [org.jboss.msc] (main) JBoss MSC version 1.2.7.SP1
03:20:01,746 INFO  [org.jboss.as] (MSC service thread 1-8) WFLYSRV0049: WildFly Core 3.0.0.Beta17 &quot;Kenny&quot; starting
03:20:03,284 INFO  [org.jboss.as.controller.management-deprecated] (Controller Boot Thread) WFLYCTL0028: Attribute 'security-realm' in the resource at address '/core-service=management/management-interface=http-interface' is deprecated, and may be removed in future version. See the attribute description in the output of the read-resource-description operation to learn more about the deprecation.
03:20:03,305 INFO  [org.wildfly.security] (ServerService Thread Pool -- 5) ELY00001: WildFly Elytron version 1.1.0.Beta38
03:20:03,319 INFO  [org.jboss.as.controller.management-deprecated] (ServerService Thread Pool -- 29) WFLYCTL0028: Attribute 'security-realm' in the resource at address '/subsystem=undertow/server=default-server/https-listener=https' is deprecated, and may be removed in future version. See the attribute description in the output of the read-resource-description operation to learn more about the deprecation.
03:20:03,395 INFO  [org.jboss.as.server] (Controller Boot Thread) WFLYSRV0039: Creating http management service using socket-binding (management-http)
03:20:03,414 INFO  [org.xnio] (MSC service thread 1-5) XNIO version 3.5.0.Beta5
03:20:03,423 INFO  [org.xnio.nio] (MSC service thread 1-5) XNIO NIO Implementation Version 3.5.0.Beta5
03:20:03,464 INFO  [org.jboss.remoting] (MSC service thread 1-5) JBoss Remoting version 5.0.0.Beta20
03:20:03,486 INFO  [org.jboss.as.jaxrs] (ServerService Thread Pool -- 42) WFLYRS0016: RESTEasy version 3.0.22.Final
03:20:03,488 INFO  [org.jboss.as.naming] (ServerService Thread Pool -- 49) WFLYNAM0001: Activating Naming Subsystem
03:20:03,490 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 41) WFLYCLINF0001: Activating Infinispan subsystem.
03:20:03,499 INFO  [org.jboss.as.jsf] (ServerService Thread Pool -- 47) WFLYJSF0007: Activated the following JSF Implementations: [main]
03:20:03,509 WARN  [org.jboss.as.txn] (ServerService Thread Pool -- 58) WFLYTX0013: Node identifier property is set to the default value. Please make sure it is unique.
03:20:03,526 INFO  [org.wildfly.extension.io] (ServerService Thread Pool -- 40) WFLYIO001: Worker 'default' has auto-configured to 8 core threads with 64 task threads based on your 4 available processors
03:20:03,559 INFO  [org.jboss.as.security] (ServerService Thread Pool -- 57) WFLYSEC0002: Activating Security Subsystem
03:20:03,568 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 36) WFLYJCA0004: Deploying JDBC-compliant driver class org.h2.Driver (version 1.4)
03:20:03,577 INFO  [org.jboss.as.webservices] (ServerService Thread Pool -- 60) WFLYWS0002: Activating WebServices Extension
03:20:03,583 INFO  [org.jboss.as.connector] (MSC service thread 1-4) WFLYJCA0009: Starting JCA Subsystem (WildFly/IronJacamar 1.4.4.Final)
03:20:03,613 INFO  [org.jboss.as.connector.deployers.jdbc] (MSC service thread 1-5) WFLYJCA0018: Started Driver service with driver-name = h2
03:20:03,597 INFO  [org.jboss.as.security] (MSC service thread 1-7) WFLYSEC0001: Current PicketBox version=5.0.1.Final
03:20:03,665 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-6) WFLYUT0003: Undertow 1.4.13.Final starting
03:20:03,666 INFO  [org.jboss.as.naming] (MSC service thread 1-6) WFLYNAM0003: Starting Naming Service
03:20:03,667 INFO  [org.jboss.as.mail.extension] (MSC service thread 1-6) WFLYMAIL0001: Bound mail session [java:jboss/mail/Default]
03:20:04,080 INFO  [org.wildfly.extension.undertow] (ServerService Thread Pool -- 59) WFLYUT0014: Creating file handler for path '/home/weli/projs/wildfly/build/target/wildfly-11.0.0.Beta1-SNAPSHOT/welcome-content' with options [directory-listing: 'false', follow-symlink: 'false', case-sensitive: 'true', safe-symlink-paths: '[]']
03:20:04,096 INFO  [org.jboss.as.ejb3] (MSC service thread 1-8) WFLYEJB0481: Strict pool slsb-strict-max-pool is using a max instance size of 64 (per class), which is derived from thread worker pool sizing.
03:20:04,098 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-5) WFLYUT0012: Started server default-server.
03:20:04,099 INFO  [org.jboss.as.ejb3] (MSC service thread 1-7) WFLYEJB0482: Strict pool mdb-strict-max-pool is using a max instance size of 16 (per class), which is derived from the number of CPUs on this host.
03:20:04,105 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-8) WFLYUT0018: Host default-host starting
03:20:04,205 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-5) WFLYUT0006: Undertow HTTP listener default listening on 127.0.0.1:8080
03:20:04,420 INFO  [org.jboss.as.patching] (MSC service thread 1-8) WFLYPAT0050: WildFly cumulative patch ID is: base, one-off patches include: none
03:20:04,465 INFO  [org.jboss.as.ejb3] (MSC service thread 1-2) WFLYEJB0493: EJB subsystem suspension complete
03:20:04,507 WARN  [org.jboss.as.domain.management.security] (MSC service thread 1-8) WFLYDM0111: Keystore /home/weli/projs/wildfly/build/target/wildfly-11.0.0.Beta1-SNAPSHOT/standalone/configuration/application.keystore not found, it will be auto generated on first use with a self signed certificate for host localhost
03:20:04,554 INFO  [org.jboss.as.server.deployment.scanner] (MSC service thread 1-5) WFLYDS0013: Started FileSystemDeploymentService for directory /home/weli/projs/wildfly/build/target/wildfly-11.0.0.Beta1-SNAPSHOT/standalone/deployments
03:20:04,724 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-2) WFLYUT0006: Undertow HTTPS listener https listening on 127.0.0.1:8443
03:20:04,730 INFO  [org.infinispan.factories.GlobalComponentRegistry] (MSC service thread 1-5) ISPN000128: Infinispan version: Infinispan 'Chakra' 8.2.6.Final
03:20:04,732 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-1) WFLYJCA0001: Bound data source [java:jboss/datasources/ExampleDS]
03:20:04,840 INFO  [org.jboss.ws.common.management] (MSC service thread 1-8) JBWS022052: Starting JBossWS 5.1.8.Final (Apache CXF 3.1.11)
03:20:04,994 INFO  [org.jboss.as.server] (Controller Boot Thread) WFLYSRV0212: Resuming server
03:20:04,996 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0060: Http management interface listening on http://127.0.0.1:9990/management
03:20:04,997 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0051: Admin console listening on http://127.0.0.1:9990
03:20:04,997 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: WildFly Core 3.0.0.Beta17 &quot;Kenny&quot; started in 4127ms - Started 397 of 615 services (401 services are lazy, passive or on-demand)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above output shows the server has been started. Until now, we have fetched the Wildfly source from Github repository, and we have built it locally in our machine, and then we run the application server locally. This is the basis to play with Wildfly source code. In future, we just need to keep pulling the newest code of Wildfly from the Github and compile it, then we can keep running a newest Wildfly server for study.&lt;/p&gt;

</description>
          <pubDate>2017-05-05T00:00:00+00:00</pubDate>
          <link>/2017/05/05/wildfly-src.html</link>
          <guid isPermaLink="true">/2017/05/05/wildfly-src.html</guid>
        </item>
      
    
  </channel>
</rss>
